<section class="relative h-[70vh]">
  <div class="hero-carousel">
    {% for block in section.blocks %}
      {% if block.type == 'slide' %}
        <div class="hero-slide{% if forloop.first %} active{% endif %}">
          <div class="absolute inset-0">
            <img 
              src="{{ block.settings.image | img_url: '2000x' }}" 
              alt="{{ block.settings.image.alt | escape }}"
              class="object-cover w-full h-full"
              {% if forloop.first %}loading="eager"{% else %}loading="lazy"{% endif %}
            >
          </div>
        </div>
      {% endif %}
    {% endfor %}
    
    <!-- Overlay -->
    <div class="absolute inset-0 bg-black/40 z-20"></div>
    
    <!-- Content -->
    <div class="absolute inset-0 z-30 flex items-center justify-center">
      <div class="container px-4 md:px-6 text-center">
        <h1 class="heading-xl text-white mb-4">{{ section.settings.heading }}</h1>
        <p class="text-lg md:text-xl text-white/90 mb-8 max-w-2xl mx-auto">
          {{ section.settings.subheading }}
        </p>
        <a href="{{ section.settings.button_link }}" class="bg-naturebuff-orange hover:bg-naturebuff-orange/90 text-naturebuff-green font-medium px-6 py-3 rounded-md inline-flex items-center">
          {{ section.settings.button_text }}
          {% render 'icon-arrow-right', class: 'ml-2 h-4 w-4' %}
        </a>
      </div>
    </div>
    
    <!-- Navigation Arrows -->
    <button class="carousel-prev absolute left-4 top-1/2 z-30 -translate-y-1/2 rounded-full bg-black/20 backdrop-blur-sm hover:bg-black/40 text-white border border-white/20 w-10 h-10 flex items-center justify-center">
      {% render 'icon-chevron-left', class: 'h-6 w-6' %}
    </button>
    
    <button class="carousel-next absolute right-4 top-1/2 z-30 -translate-y-1/2 rounded-full bg-black/20 backdrop-blur-sm hover:bg-black/40 text-white border border-white/20 w-10 h-10 flex items-center justify-center">
      {% render 'icon-chevron-right', class: 'h-6 w-6' %}
    </button>
    
    <!-- Indicator Dots -->
    <div class="carousel-dots absolute bottom-6 left-1/2 z-30 flex -translate-x-1/2 space-x-2">
      {% for block in section.blocks %}
        {% if block.type == 'slide' %}
          <button 
            class="carousel-dot h-2.5 rounded-full transition-all{% if forloop.first %} bg-white w-8{% else %} bg-white/50 hover:bg-white/80 w-2.5{% endif %}" 
            data-index="{{ forloop.index0 }}"
            aria-label="Go to slide {{ forloop.index }}"
          ></button>
        {% endif %}
      {% endfor %}
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const carousel = document.querySelector('.hero-carousel');
    const slides = carousel.querySelectorAll('.hero-slide');
    const dots = carousel.querySelectorAll('.carousel-dot');
    const prevButton = carousel.querySelector('.carousel-prev');
    const nextButton = carousel.querySelector('.carousel-next');
    let currentIndex = 0;
    let interval;
    const intervalTime = 5000;
    
    function goToSlide(index) {
      // Remove active class from all slides and dots
      slides.forEach(slide => slide.classList.remove('active'));
      dots.forEach(dot => {
        dot.classList.remove('bg-white', 'w-8');
        dot.classList.add('bg-white/50', 'w-2.5');
      });
      
      // Add active class to current slide and dot
      slides[index].classList.add('active');
      dots[index].classList.remove('bg-white/50', 'w-2.5');
      dots[index].classList.add('bg-white', 'w-8');
      
      currentIndex = index;
    }
    
    function nextSlide() {
      goToSlide((currentIndex + 1) % slides.length);
    }
    
    function prevSlide() {
      goToSlide((currentIndex - 1 + slides.length) % slides.length);
    }
    
    // Set up click events for dots
    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        goToSlide(index);
        resetInterval();
      });
    });
    
    // Set up click events for prev/next buttons
    prevButton.addEventListener('click', () => {
      prevSlide();
      resetInterval();
    });
    
    nextButton.addEventListener('click', () => {
      nextSlide();
      resetInterval();
    });
    
    // Start automatic rotation
    function startInterval() {
      interval = setInterval(nextSlide, intervalTime);
    }
    
    function resetInterval() {
      clearInterval(interval);
      startInterval();
    }
    
    startInterval();
  });
</script>

<style>
  .hero-slide {
    position: absolute;
    inset: 0;
    opacity: 0;
    transition: opacity 1s ease;
    z-index: 0;
  }
  
  .hero-slide.active {
    opacity: 1;
    z-index: 10;
  }
</style>

{% schema %}
{
  "name": "Hero Carousel",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Sustainable Hygiene for the Wild at Heart"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Eco-friendly, biodegradable products that keep you fresh without harming the planet."
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text",
      "default": "Shop Now"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link",
      "default": "/collections/all"
    }
  ],
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Hero Carousel",
      "blocks": [
        {
          "type": "slide"
        },
        {
          "type": "slide"
        },
        {
          "type": "slide"
        }
      ]
    }
  ]
}
{% endschema %}

